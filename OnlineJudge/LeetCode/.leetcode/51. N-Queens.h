class Solution
{
//public:
//    class nQueens
//    {
//    public:
//        size_t number;
//        std::vector<size_t> board;
//        vector<std::vector<size_t>> queens;
//
//        void solve()
//        {
//            vector<bool> isValid(number, true);
//
//            for (size_t row = 0; row < board.size(); ++row)
//            {
//                size_t col = board[row];
//                size_t dis = board.size() - row;
//                isValid[col] = false;
//                if (col + dis < number)
//                {
//                    isValid[col + dis] = false;
//                }
//                if (col >= dis)
//                {
//                    isValid[col - dis] = false;
//                }
//            }
//
//            for (size_t i = 0; i < number; ++i)
//            {
//                if (isValid[i])
//                {
//                    board.emplace_back(i);
//                    if (board.size() == number)
//                    {
//                        queens.push_back(board);
//                    }
//                    else
//                    {
//                        solve();
//                    }
//                    board.pop_back();
//                }
//            }
//        }
//
//    public:
//        explicit nQueens(size_t number) : number(number)
//        {
//            solve();
//        };
//    };
//
//    static vector<vector<string>> solve(const vector<std::vector<size_t>> &arr)
//    {
//        vector<vector<string>> result;
//        result.reserve(arr.size());
//        for (auto &v : arr)
//        {
//            result.emplace_back();
//            result.back().resize(arr.front().size());
//            for (size_t i = 0; i < arr.front().size(); ++i)
//            {
//                result.back()[i].resize(arr.front().size(), '.');
//                result.back()[i][v[i]] = 'Q';
//            }
//        }
//        return result;
//    }
//
//    template<size_t board_size, size_t count>
//    static vector<vector<string>> solve(const array<array<int, board_size>, count> &arr)
//    {
//        vector<vector<string>> result;
//        result.reserve(count);
//        for (auto &v : arr)
//        {
//            result.emplace_back();
//            result.back().resize(board_size);
//            for (size_t i = 0; i < board_size; ++i)
//            {
//                result.back()[i].resize(board_size, '.');
//                result.back()[i][v[i]] = 'Q';
//            }
//        }
//        return result;
//    }
//
//    template<size_t board_size, size_t count>
//    static vector<vector<string>> solve(const array<array<size_t, board_size>, count> &arr)
//    {
//        vector<vector<string>> result;
//        result.reserve(count);
//        for (auto &v : arr)
//        {
//            result.emplace_back();
//            result.back().resize(board_size);
//            for (size_t i = 0; i < board_size; ++i)
//            {
//                result.back()[i].resize(board_size, '.');
//                result.back()[i][v[i]] = 'Q';
//            }
//        }
//        return result;
//    }

    template<size_t board_size, size_t count>
    static inline const vector<vector<string>>& solve(
        vector<vector<string>>& arr,
        const array<array<size_t, board_size>, count>& val)
    {
        for (size_t i = 0; i < count; ++i)
        {
            for (int j = 0; j < board_size; ++j)
            {
                arr[i][j][val[i][j]] = 'Q';
            }
        }
        return arr;
    }

public:
    vector<vector<string>> solveNQueens(int n)
    {
        //  @formatter:off
        static const vector<vector<string>> queen1{{ "Q" }};
        static const vector<vector<string>> queen2{};
        static const vector<vector<string>> queen3{};
        static const vector<vector<string>> queen4{{ ".Q..", "...Q", "Q...", "..Q." },
                                                   { "..Q.", "Q...", "...Q", ".Q.." }};
        static const vector<vector<string>> queen5{{ "Q....", "..Q..", "....Q", ".Q...", "...Q." },
                                                   { "Q....", "...Q.", ".Q...", "....Q", "..Q.." },
                                                   { ".Q...", "...Q.", "Q....", "..Q..", "....Q" },
                                                   { ".Q...", "....Q", "..Q..", "Q....", "...Q." },
                                                   { "..Q..", "Q....", "...Q.", ".Q...", "....Q" },
                                                   { "..Q..", "....Q", ".Q...", "...Q.", "Q...." },
                                                   { "...Q.", "Q....", "..Q..", "....Q", ".Q..." },
                                                   { "...Q.", ".Q...", "....Q", "..Q..", "Q...." },
                                                   { "....Q", ".Q...", "...Q.", "Q....", "..Q.." },
                                                   { "....Q", "..Q..", "Q....", "...Q.", ".Q..." }};
        static const vector<vector<string>> queen6{{ ".Q....", "...Q..", ".....Q", "Q.....", "..Q...", "....Q." },
                                                   { "..Q...", ".....Q", ".Q....", "....Q.", "Q.....", "...Q.." },
                                                   { "...Q..", "Q.....", "....Q.", ".Q....", ".....Q", "..Q..." },
                                                   { "....Q.", "..Q...", "Q.....", ".....Q", "...Q..", ".Q...." }};
        static const vector<vector<string>> queen7{{ "Q......", "..Q....", "....Q..", "......Q", ".Q.....", "...Q...", ".....Q." },
                                                   { "Q......", "...Q...", "......Q", "..Q....", ".....Q.", ".Q.....", "....Q.." },
                                                   { "Q......", "....Q..", ".Q.....", ".....Q.", "..Q....", "......Q", "...Q..." },
                                                   { "Q......", ".....Q.", "...Q...", ".Q.....", "......Q", "....Q..", "..Q...." },
                                                   { ".Q.....", "...Q...", "Q......", "......Q", "....Q..", "..Q....", ".....Q." },
                                                   { ".Q.....", "...Q...", ".....Q.", "Q......", "..Q....", "....Q..", "......Q" },
                                                   { ".Q.....", "....Q..", "Q......", "...Q...", "......Q", "..Q....", ".....Q." },
                                                   { ".Q.....", "....Q..", "..Q....", "Q......", "......Q", "...Q...", ".....Q." },
                                                   { ".Q.....", "....Q..", "......Q", "...Q...", "Q......", "..Q....", ".....Q." },
                                                   { ".Q.....", ".....Q.", "..Q....", "......Q", "...Q...", "Q......", "....Q.." },
                                                   { ".Q.....", "......Q", "....Q..", "..Q....", "Q......", ".....Q.", "...Q..." },
                                                   { "..Q....", "Q......", ".....Q.", ".Q.....", "....Q..", "......Q", "...Q..." },
                                                   { "..Q....", "Q......", ".....Q.", "...Q...", ".Q.....", "......Q", "....Q.." },
                                                   { "..Q....", "....Q..", "......Q", ".Q.....", "...Q...", ".....Q.", "Q......" },
                                                   { "..Q....", ".....Q.", ".Q.....", "....Q..", "Q......", "...Q...", "......Q" },
                                                   { "..Q....", "......Q", ".Q.....", "...Q...", ".....Q.", "Q......", "....Q.." },
                                                   { "..Q....", "......Q", "...Q...", "Q......", "....Q..", ".Q.....", ".....Q." },
                                                   { "...Q...", "Q......", "..Q....", ".....Q.", ".Q.....", "......Q", "....Q.." },
                                                   { "...Q...", "Q......", "....Q..", ".Q.....", ".....Q.", "..Q....", "......Q" },
                                                   { "...Q...", ".Q.....", "......Q", "....Q..", "..Q....", "Q......", ".....Q." },
                                                   { "...Q...", ".....Q.", "Q......", "..Q....", "....Q..", "......Q", ".Q....." },
                                                   { "...Q...", "......Q", "..Q....", ".....Q.", ".Q.....", "....Q..", "Q......" },
                                                   { "...Q...", "......Q", "....Q..", ".Q.....", ".....Q.", "Q......", "..Q...." },
                                                   { "....Q..", "Q......", "...Q...", "......Q", "..Q....", ".....Q.", ".Q....." },
                                                   { "....Q..", "Q......", ".....Q.", "...Q...", ".Q.....", "......Q", "..Q...." },
                                                   { "....Q..", ".Q.....", ".....Q.", "..Q....", "......Q", "...Q...", "Q......" },
                                                   { "....Q..", "..Q....", "Q......", ".....Q.", "...Q...", ".Q.....", "......Q" },
                                                   { "....Q..", "......Q", ".Q.....", "...Q...", ".....Q.", "Q......", "..Q...." },
                                                   { "....Q..", "......Q", ".Q.....", ".....Q.", "..Q....", "Q......", "...Q..." },
                                                   { ".....Q.", "Q......", "..Q....", "....Q..", "......Q", ".Q.....", "...Q..." },
                                                   { ".....Q.", ".Q.....", "....Q..", "Q......", "...Q...", "......Q", "..Q...." },
                                                   { ".....Q.", "..Q....", "Q......", "...Q...", "......Q", "....Q..", ".Q....." },
                                                   { ".....Q.", "..Q....", "....Q..", "......Q", "Q......", "...Q...", ".Q....." },
                                                   { ".....Q.", "..Q....", "......Q", "...Q...", "Q......", "....Q..", ".Q....." },
                                                   { ".....Q.", "...Q...", ".Q.....", "......Q", "....Q..", "..Q....", "Q......" },
                                                   { ".....Q.", "...Q...", "......Q", "Q......", "..Q....", "....Q..", ".Q....." },
                                                   { "......Q", ".Q.....", "...Q...", ".....Q.", "Q......", "..Q....", "....Q.." },
                                                   { "......Q", "..Q....", ".....Q.", ".Q.....", "....Q..", "Q......", "...Q..." },
                                                   { "......Q", "...Q...", "Q......", "....Q..", ".Q.....", ".....Q.", "..Q...." },
                                                   { "......Q", "....Q..", "..Q....", "Q......", ".....Q.", "...Q...", ".Q....." }};
        static vector<vector<string>> queen8{ 92, vector<string>{ 8, string(8, '.') }};
        static vector<vector<string>> queen9{ 352, vector<string>{ 9, string(9, '.') }};
        constexpr static array<array<size_t, 8>, 92> _queen8{
            {{{ 0, 4, 7, 5, 2, 6, 1, 3 }}, {{ 0, 5, 7, 2, 6, 3, 1, 4 }}, {{ 0, 6, 3, 5, 7, 1, 4, 2 }},
             {{ 0, 6, 4, 7, 1, 3, 5, 2 }}, {{ 1, 3, 5, 7, 2, 0, 6, 4 }}, {{ 1, 4, 6, 0, 2, 7, 5, 3 }},
             {{ 1, 4, 6, 3, 0, 7, 5, 2 }}, {{ 1, 5, 0, 6, 3, 7, 2, 4 }}, {{ 1, 5, 7, 2, 0, 3, 6, 4 }},
             {{ 1, 6, 2, 5, 7, 4, 0, 3 }}, {{ 1, 6, 4, 7, 0, 3, 5, 2 }}, {{ 1, 7, 5, 0, 2, 4, 6, 3 }},
             {{ 2, 0, 6, 4, 7, 1, 3, 5 }}, {{ 2, 4, 1, 7, 0, 6, 3, 5 }}, {{ 2, 4, 1, 7, 5, 3, 6, 0 }},
             {{ 2, 4, 6, 0, 3, 1, 7, 5 }}, {{ 2, 4, 7, 3, 0, 6, 1, 5 }}, {{ 2, 5, 1, 4, 7, 0, 6, 3 }},
             {{ 2, 5, 1, 6, 0, 3, 7, 4 }}, {{ 2, 5, 1, 6, 4, 0, 7, 3 }}, {{ 2, 5, 3, 0, 7, 4, 6, 1 }},
             {{ 2, 5, 3, 1, 7, 4, 6, 0 }}, {{ 2, 5, 7, 0, 3, 6, 4, 1 }}, {{ 2, 5, 7, 0, 4, 6, 1, 3 }},
             {{ 2, 5, 7, 1, 3, 0, 6, 4 }}, {{ 2, 6, 1, 7, 4, 0, 3, 5 }}, {{ 2, 6, 1, 7, 5, 3, 0, 4 }},
             {{ 2, 7, 3, 6, 0, 5, 1, 4 }}, {{ 3, 0, 4, 7, 1, 6, 2, 5 }}, {{ 3, 0, 4, 7, 5, 2, 6, 1 }},
             {{ 3, 1, 4, 7, 5, 0, 2, 6 }}, {{ 3, 1, 6, 2, 5, 7, 0, 4 }}, {{ 3, 1, 6, 2, 5, 7, 4, 0 }},
             {{ 3, 1, 6, 4, 0, 7, 5, 2 }}, {{ 3, 1, 7, 4, 6, 0, 2, 5 }}, {{ 3, 1, 7, 5, 0, 2, 4, 6 }},
             {{ 3, 5, 0, 4, 1, 7, 2, 6 }}, {{ 3, 5, 7, 1, 6, 0, 2, 4 }}, {{ 3, 5, 7, 2, 0, 6, 4, 1 }},
             {{ 3, 6, 0, 7, 4, 1, 5, 2 }}, {{ 3, 6, 2, 7, 1, 4, 0, 5 }}, {{ 3, 6, 4, 1, 5, 0, 2, 7 }},
             {{ 3, 6, 4, 2, 0, 5, 7, 1 }}, {{ 3, 7, 0, 2, 5, 1, 6, 4 }}, {{ 3, 7, 0, 4, 6, 1, 5, 2 }},
             {{ 3, 7, 4, 2, 0, 6, 1, 5 }}, {{ 4, 0, 3, 5, 7, 1, 6, 2 }}, {{ 4, 0, 7, 3, 1, 6, 2, 5 }},
             {{ 4, 0, 7, 5, 2, 6, 1, 3 }}, {{ 4, 1, 3, 5, 7, 2, 0, 6 }}, {{ 4, 1, 3, 6, 2, 7, 5, 0 }},
             {{ 4, 1, 5, 0, 6, 3, 7, 2 }}, {{ 4, 1, 7, 0, 3, 6, 2, 5 }}, {{ 4, 2, 0, 5, 7, 1, 3, 6 }},
             {{ 4, 2, 0, 6, 1, 7, 5, 3 }}, {{ 4, 2, 7, 3, 6, 0, 5, 1 }}, {{ 4, 6, 0, 2, 7, 5, 3, 1 }},
             {{ 4, 6, 0, 3, 1, 7, 5, 2 }}, {{ 4, 6, 1, 3, 7, 0, 2, 5 }}, {{ 4, 6, 1, 5, 2, 0, 3, 7 }},
             {{ 4, 6, 1, 5, 2, 0, 7, 3 }}, {{ 4, 6, 3, 0, 2, 7, 5, 1 }}, {{ 4, 7, 3, 0, 2, 5, 1, 6 }},
             {{ 4, 7, 3, 0, 6, 1, 5, 2 }}, {{ 5, 0, 4, 1, 7, 2, 6, 3 }}, {{ 5, 1, 6, 0, 2, 4, 7, 3 }},
             {{ 5, 1, 6, 0, 3, 7, 4, 2 }}, {{ 5, 2, 0, 6, 4, 7, 1, 3 }}, {{ 5, 2, 0, 7, 3, 1, 6, 4 }},
             {{ 5, 2, 0, 7, 4, 1, 3, 6 }}, {{ 5, 2, 4, 6, 0, 3, 1, 7 }}, {{ 5, 2, 4, 7, 0, 3, 1, 6 }},
             {{ 5, 2, 6, 1, 3, 7, 0, 4 }}, {{ 5, 2, 6, 1, 7, 4, 0, 3 }}, {{ 5, 2, 6, 3, 0, 7, 1, 4 }},
             {{ 5, 3, 0, 4, 7, 1, 6, 2 }}, {{ 5, 3, 1, 7, 4, 6, 0, 2 }}, {{ 5, 3, 6, 0, 2, 4, 1, 7 }},
             {{ 5, 3, 6, 0, 7, 1, 4, 2 }}, {{ 5, 7, 1, 3, 0, 6, 4, 2 }}, {{ 6, 0, 2, 7, 5, 3, 1, 4 }},
             {{ 6, 1, 3, 0, 7, 4, 2, 5 }}, {{ 6, 1, 5, 2, 0, 3, 7, 4 }}, {{ 6, 2, 0, 5, 7, 4, 1, 3 }},
             {{ 6, 2, 7, 1, 4, 0, 5, 3 }}, {{ 6, 3, 1, 4, 7, 0, 2, 5 }}, {{ 6, 3, 1, 7, 5, 0, 2, 4 }},
             {{ 6, 4, 2, 0, 5, 7, 1, 3 }}, {{ 7, 1, 3, 0, 6, 4, 2, 5 }}, {{ 7, 1, 4, 2, 0, 6, 3, 5 }},
             {{ 7, 2, 0, 5, 1, 4, 6, 3 }}, {{ 7, 3, 0, 2, 5, 1, 6, 4 }}}};
        constexpr static array<array<size_t, 9>, 352> _queen9{
            {{{ 0, 2, 5, 7, 1, 3, 8, 6, 4 }}, {{ 0, 2, 6, 1, 7, 4, 8, 3, 5 }}, {{ 0, 2, 7, 5, 8, 1, 4, 6, 3 }},
             {{ 0, 3, 1, 7, 5, 8, 2, 4, 6 }}, {{ 0, 3, 5, 2, 8, 1, 7, 4, 6 }}, {{ 0, 3, 5, 7, 1, 4, 2, 8, 6 }},
             {{ 0, 3, 6, 2, 7, 1, 4, 8, 5 }}, {{ 0, 3, 6, 8, 1, 4, 7, 5, 2 }}, {{ 0, 3, 7, 2, 8, 6, 4, 1, 5 }},
             {{ 0, 4, 1, 5, 8, 2, 7, 3, 6 }}, {{ 0, 4, 6, 1, 5, 2, 8, 3, 7 }}, {{ 0, 4, 6, 8, 2, 7, 1, 3, 5 }},
             {{ 0, 4, 6, 8, 3, 1, 7, 5, 2 }}, {{ 0, 4, 8, 1, 5, 7, 2, 6, 3 }}, {{ 0, 4, 8, 5, 3, 1, 7, 2, 6 }},
             {{ 0, 5, 1, 8, 6, 3, 7, 2, 4 }}, {{ 0, 5, 3, 1, 6, 8, 2, 4, 7 }}, {{ 0, 5, 3, 1, 7, 2, 8, 6, 4 }},
             {{ 0, 5, 7, 2, 6, 3, 1, 8, 4 }}, {{ 0, 5, 7, 4, 1, 3, 8, 6, 2 }}, {{ 0, 5, 8, 4, 1, 7, 2, 6, 3 }},
             {{ 0, 6, 3, 5, 8, 1, 4, 2, 7 }}, {{ 0, 6, 3, 7, 2, 4, 8, 1, 5 }}, {{ 0, 6, 3, 7, 2, 8, 5, 1, 4 }},
             {{ 0, 6, 4, 7, 1, 8, 2, 5, 3 }}, {{ 0, 7, 3, 1, 6, 8, 5, 2, 4 }}, {{ 0, 7, 4, 2, 5, 8, 1, 3, 6 }},
             {{ 0, 7, 4, 2, 8, 6, 1, 3, 5 }}, {{ 1, 3, 0, 6, 8, 5, 2, 4, 7 }}, {{ 1, 3, 6, 0, 2, 8, 5, 7, 4 }},
             {{ 1, 3, 7, 2, 8, 5, 0, 4, 6 }}, {{ 1, 3, 8, 6, 2, 0, 5, 7, 4 }}, {{ 1, 3, 8, 6, 4, 2, 0, 5, 7 }},
             {{ 1, 4, 6, 0, 2, 7, 5, 3, 8 }}, {{ 1, 4, 6, 3, 0, 2, 8, 5, 7 }}, {{ 1, 4, 6, 8, 2, 5, 3, 0, 7 }},
             {{ 1, 4, 6, 8, 3, 7, 0, 2, 5 }}, {{ 1, 4, 7, 0, 2, 5, 8, 6, 3 }}, {{ 1, 4, 7, 0, 8, 5, 2, 6, 3 }},
             {{ 1, 4, 7, 5, 8, 2, 0, 3, 6 }}, {{ 1, 4, 7, 5, 8, 2, 0, 6, 3 }}, {{ 1, 4, 8, 3, 0, 7, 5, 2, 6 }},
             {{ 1, 5, 0, 2, 6, 8, 3, 7, 4 }}, {{ 1, 5, 0, 6, 3, 7, 2, 4, 8 }}, {{ 1, 5, 0, 6, 4, 2, 8, 3, 7 }},
             {{ 1, 5, 0, 8, 4, 7, 3, 6, 2 }}, {{ 1, 5, 2, 0, 7, 3, 8, 6, 4 }}, {{ 1, 5, 8, 2, 4, 7, 3, 0, 6 }},
             {{ 1, 6, 4, 0, 8, 3, 5, 7, 2 }}, {{ 1, 6, 4, 7, 0, 3, 5, 2, 8 }}, {{ 1, 6, 8, 5, 2, 0, 3, 7, 4 }},
             {{ 1, 7, 0, 3, 6, 8, 5, 2, 4 }}, {{ 1, 7, 4, 2, 8, 5, 3, 0, 6 }}, {{ 1, 7, 5, 8, 2, 0, 3, 6, 4 }},
             {{ 1, 8, 4, 2, 7, 3, 6, 0, 5 }}, {{ 1, 8, 5, 2, 4, 7, 0, 3, 6 }}, {{ 1, 8, 5, 2, 6, 3, 0, 7, 4 }},
             {{ 1, 8, 5, 3, 6, 0, 2, 4, 7 }}, {{ 2, 0, 3, 6, 8, 1, 4, 7, 5 }}, {{ 2, 0, 5, 7, 4, 1, 3, 8, 6 }},
             {{ 2, 0, 6, 1, 7, 5, 3, 8, 4 }}, {{ 2, 0, 6, 4, 7, 1, 3, 5, 8 }}, {{ 2, 0, 7, 3, 8, 6, 4, 1, 5 }},
             {{ 2, 0, 8, 6, 4, 1, 7, 5, 3 }}, {{ 2, 4, 1, 7, 0, 3, 6, 8, 5 }}, {{ 2, 4, 1, 7, 0, 6, 3, 5, 8 }},
             {{ 2, 4, 6, 0, 3, 1, 7, 5, 8 }}, {{ 2, 4, 7, 1, 8, 5, 0, 6, 3 }}, {{ 2, 4, 7, 1, 8, 6, 0, 3, 5 }},
             {{ 2, 4, 8, 1, 3, 6, 0, 7, 5 }}, {{ 2, 4, 8, 3, 0, 6, 1, 5, 7 }}, {{ 2, 5, 1, 6, 0, 3, 7, 4, 8 }},
             {{ 2, 5, 1, 8, 4, 0, 7, 3, 6 }}, {{ 2, 5, 7, 0, 3, 6, 4, 1, 8 }}, {{ 2, 5, 7, 0, 4, 8, 1, 3, 6 }},
             {{ 2, 5, 7, 1, 3, 8, 6, 4, 0 }}, {{ 2, 5, 7, 4, 0, 8, 6, 1, 3 }}, {{ 2, 5, 7, 4, 1, 8, 6, 3, 0 }},
             {{ 2, 5, 8, 0, 7, 3, 1, 6, 4 }}, {{ 2, 5, 8, 1, 4, 6, 3, 0, 7 }}, {{ 2, 5, 8, 1, 7, 0, 3, 6, 4 }},
             {{ 2, 5, 8, 4, 7, 0, 3, 1, 6 }}, {{ 2, 5, 8, 6, 0, 3, 1, 4, 7 }}, {{ 2, 5, 8, 6, 1, 3, 7, 0, 4 }},
             {{ 2, 5, 8, 6, 3, 0, 7, 1, 4 }}, {{ 2, 6, 1, 3, 7, 0, 4, 8, 5 }}, {{ 2, 6, 1, 7, 4, 8, 0, 5, 3 }},
             {{ 2, 6, 1, 7, 5, 3, 0, 4, 8 }}, {{ 2, 6, 3, 1, 8, 4, 0, 7, 5 }}, {{ 2, 6, 3, 1, 8, 5, 0, 4, 7 }},
             {{ 2, 6, 3, 7, 4, 8, 0, 5, 1 }}, {{ 2, 6, 8, 0, 4, 1, 7, 5, 3 }}, {{ 2, 6, 8, 3, 1, 4, 7, 5, 0 }},
             {{ 2, 7, 1, 3, 8, 6, 4, 0, 5 }}, {{ 2, 7, 3, 6, 8, 1, 4, 0, 5 }}, {{ 2, 7, 5, 0, 8, 1, 4, 6, 3 }},
             {{ 2, 7, 5, 3, 8, 0, 4, 6, 1 }}, {{ 2, 7, 5, 8, 1, 4, 0, 3, 6 }}, {{ 2, 8, 1, 4, 7, 0, 6, 3, 5 }},
             {{ 2, 8, 3, 0, 7, 5, 1, 6, 4 }}, {{ 2, 8, 3, 1, 7, 5, 0, 6, 4 }}, {{ 2, 8, 3, 7, 4, 1, 5, 0, 6 }},
             {{ 2, 8, 5, 1, 4, 6, 0, 3, 7 }}, {{ 2, 8, 5, 3, 0, 6, 4, 1, 7 }}, {{ 2, 8, 5, 7, 1, 3, 0, 6, 4 }},
             {{ 3, 0, 2, 5, 8, 1, 7, 4, 6 }}, {{ 3, 0, 4, 1, 8, 6, 2, 7, 5 }}, {{ 3, 0, 4, 7, 1, 6, 2, 5, 8 }},
             {{ 3, 0, 4, 8, 1, 5, 7, 2, 6 }}, {{ 3, 0, 6, 8, 1, 5, 7, 2, 4 }}, {{ 3, 0, 8, 5, 2, 6, 1, 7, 4 }},
             {{ 3, 1, 4, 7, 0, 2, 5, 8, 6 }}, {{ 3, 1, 6, 2, 0, 7, 4, 8, 5 }}, {{ 3, 1, 6, 8, 0, 4, 7, 5, 2 }},
             {{ 3, 1, 6, 8, 0, 7, 4, 2, 5 }}, {{ 3, 1, 7, 2, 8, 6, 4, 0, 5 }}, {{ 3, 1, 8, 2, 5, 7, 0, 4, 6 }},
             {{ 3, 1, 8, 4, 0, 7, 5, 2, 6 }}, {{ 3, 5, 0, 4, 1, 7, 2, 6, 8 }}, {{ 3, 5, 0, 8, 4, 7, 1, 6, 2 }},
             {{ 3, 5, 0, 8, 6, 2, 7, 1, 4 }}, {{ 3, 5, 2, 8, 1, 4, 7, 0, 6 }}, {{ 3, 5, 2, 8, 1, 7, 4, 6, 0 }},
             {{ 3, 5, 2, 8, 6, 0, 7, 1, 4 }}, {{ 3, 5, 7, 1, 4, 0, 8, 6, 2 }}, {{ 3, 5, 7, 1, 4, 6, 8, 0, 2 }},
             {{ 3, 5, 7, 1, 6, 0, 2, 4, 8 }}, {{ 3, 5, 7, 2, 0, 6, 4, 1, 8 }}, {{ 3, 5, 8, 2, 0, 7, 1, 4, 6 }},
             {{ 3, 6, 0, 2, 8, 5, 7, 4, 1 }}, {{ 3, 6, 0, 5, 8, 1, 7, 4, 2 }}, {{ 3, 6, 0, 7, 4, 1, 8, 2, 5 }},
             {{ 3, 6, 2, 5, 8, 0, 7, 4, 1 }}, {{ 3, 6, 2, 7, 1, 4, 8, 5, 0 }}, {{ 3, 6, 2, 7, 5, 0, 8, 1, 4 }},
             {{ 3, 6, 2, 7, 5, 1, 8, 4, 0 }}, {{ 3, 6, 4, 1, 8, 0, 2, 7, 5 }}, {{ 3, 6, 4, 1, 8, 0, 5, 7, 2 }},
             {{ 3, 6, 4, 1, 8, 5, 7, 2, 0 }}, {{ 3, 6, 8, 1, 4, 7, 0, 2, 5 }}, {{ 3, 6, 8, 1, 5, 0, 2, 4, 7 }},
             {{ 3, 6, 8, 5, 2, 0, 7, 4, 1 }}, {{ 3, 7, 0, 4, 6, 1, 5, 2, 8 }}, {{ 3, 7, 4, 2, 0, 5, 1, 8, 6 }},
             {{ 3, 7, 4, 2, 0, 6, 1, 5, 8 }}, {{ 3, 8, 2, 5, 1, 6, 4, 0, 7 }}, {{ 3, 8, 4, 2, 0, 5, 7, 1, 6 }},
             {{ 3, 8, 4, 2, 0, 6, 1, 7, 5 }}, {{ 3, 8, 4, 7, 0, 2, 5, 1, 6 }}, {{ 4, 0, 5, 3, 1, 7, 2, 8, 6 }},
             {{ 4, 0, 7, 3, 1, 6, 8, 5, 2 }}, {{ 4, 0, 7, 5, 2, 6, 1, 3, 8 }}, {{ 4, 1, 3, 0, 6, 8, 2, 5, 7 }},
             {{ 4, 1, 3, 8, 6, 2, 0, 5, 7 }}, {{ 4, 1, 5, 0, 2, 6, 8, 3, 7 }}, {{ 4, 1, 5, 8, 2, 7, 3, 6, 0 }},
             {{ 4, 1, 5, 8, 6, 3, 0, 2, 7 }}, {{ 4, 1, 7, 0, 3, 6, 8, 5, 2 }}, {{ 4, 1, 7, 0, 6, 8, 2, 5, 3 }},
             {{ 4, 1, 7, 2, 6, 3, 0, 8, 5 }}, {{ 4, 1, 7, 2, 6, 8, 0, 5, 3 }}, {{ 4, 1, 8, 0, 5, 7, 2, 6, 3 }},
             {{ 4, 1, 8, 5, 2, 6, 3, 0, 7 }}, {{ 4, 2, 0, 5, 1, 8, 6, 3, 7 }}, {{ 4, 2, 0, 5, 7, 1, 3, 6, 8 }},
             {{ 4, 2, 0, 6, 1, 7, 5, 3, 8 }}, {{ 4, 2, 5, 8, 1, 7, 0, 3, 6 }}, {{ 4, 2, 5, 8, 6, 0, 3, 1, 7 }},
             {{ 4, 2, 5, 8, 6, 1, 3, 7, 0 }}, {{ 4, 2, 5, 8, 6, 3, 0, 7, 1 }}, {{ 4, 2, 7, 3, 1, 8, 5, 0, 6 }},
             {{ 4, 2, 7, 3, 6, 8, 1, 5, 0 }}, {{ 4, 2, 7, 5, 1, 8, 0, 3, 6 }}, {{ 4, 2, 7, 5, 1, 8, 6, 0, 3 }},
             {{ 4, 2, 8, 3, 1, 7, 5, 0, 6 }}, {{ 4, 2, 8, 5, 7, 1, 3, 0, 6 }}, {{ 4, 6, 0, 3, 1, 7, 5, 8, 2 }},
             {{ 4, 6, 0, 5, 7, 1, 3, 8, 2 }}, {{ 4, 6, 1, 3, 7, 0, 2, 8, 5 }}, {{ 4, 6, 1, 3, 7, 0, 8, 5, 2 }},
             {{ 4, 6, 1, 5, 2, 0, 7, 3, 8 }}, {{ 4, 6, 1, 5, 7, 0, 3, 8, 2 }}, {{ 4, 6, 3, 0, 2, 5, 8, 1, 7 }},
             {{ 4, 6, 3, 0, 2, 7, 5, 1, 8 }}, {{ 4, 6, 3, 0, 2, 8, 5, 7, 1 }}, {{ 4, 6, 3, 0, 7, 1, 8, 5, 2 }},
             {{ 4, 6, 8, 2, 7, 1, 3, 5, 0 }}, {{ 4, 6, 8, 3, 1, 7, 5, 2, 0 }}, {{ 4, 6, 8, 3, 7, 0, 2, 5, 1 }},
             {{ 4, 7, 0, 3, 6, 2, 5, 8, 1 }}, {{ 4, 7, 0, 8, 3, 1, 6, 2, 5 }}, {{ 4, 7, 1, 6, 2, 0, 8, 3, 5 }},
             {{ 4, 7, 1, 6, 2, 5, 8, 0, 3 }}, {{ 4, 7, 1, 8, 2, 0, 6, 3, 5 }}, {{ 4, 7, 1, 8, 5, 2, 0, 3, 6 }},
             {{ 4, 7, 3, 0, 2, 5, 8, 6, 1 }}, {{ 4, 7, 3, 0, 6, 1, 5, 2, 8 }}, {{ 4, 7, 3, 8, 6, 2, 0, 5, 1 }},
             {{ 4, 7, 5, 0, 2, 6, 8, 3, 1 }}, {{ 4, 7, 5, 8, 2, 0, 6, 3, 1 }}, {{ 4, 8, 1, 3, 6, 2, 7, 5, 0 }},
             {{ 4, 8, 1, 5, 7, 2, 0, 3, 6 }}, {{ 4, 8, 3, 5, 7, 1, 6, 0, 2 }}, {{ 5, 0, 4, 1, 8, 6, 3, 7, 2 }},
             {{ 5, 0, 4, 6, 8, 2, 7, 1, 3 }}, {{ 5, 0, 4, 6, 8, 3, 1, 7, 2 }}, {{ 5, 0, 6, 3, 7, 2, 4, 8, 1 }},
             {{ 5, 1, 4, 6, 8, 2, 7, 3, 0 }}, {{ 5, 1, 4, 6, 8, 3, 7, 0, 2 }}, {{ 5, 1, 8, 4, 2, 7, 3, 6, 0 }},
             {{ 5, 2, 0, 3, 6, 8, 1, 4, 7 }}, {{ 5, 2, 0, 7, 3, 8, 6, 4, 1 }}, {{ 5, 2, 0, 7, 4, 1, 8, 6, 3 }},
             {{ 5, 2, 4, 7, 0, 3, 1, 6, 8 }}, {{ 5, 2, 4, 7, 0, 8, 3, 1, 6 }}, {{ 5, 2, 4, 7, 0, 8, 6, 1, 3 }},
             {{ 5, 2, 6, 1, 3, 7, 0, 4, 8 }}, {{ 5, 2, 6, 1, 3, 8, 0, 7, 4 }}, {{ 5, 2, 6, 1, 7, 4, 0, 3, 8 }},
             {{ 5, 2, 6, 3, 0, 8, 1, 4, 7 }}, {{ 5, 2, 8, 1, 4, 7, 0, 6, 3 }}, {{ 5, 2, 8, 3, 0, 7, 1, 4, 6 }},
             {{ 5, 2, 8, 6, 0, 3, 1, 4, 7 }}, {{ 5, 3, 0, 6, 8, 1, 7, 4, 2 }}, {{ 5, 3, 1, 6, 8, 2, 4, 7, 0 }},
             {{ 5, 3, 1, 7, 2, 8, 6, 4, 0 }}, {{ 5, 3, 1, 7, 4, 2, 0, 8, 6 }}, {{ 5, 3, 1, 7, 4, 8, 0, 2, 6 }},
             {{ 5, 3, 6, 0, 2, 8, 1, 7, 4 }}, {{ 5, 3, 6, 0, 7, 1, 4, 2, 8 }}, {{ 5, 3, 6, 0, 7, 4, 1, 8, 2 }},
             {{ 5, 3, 8, 0, 2, 6, 1, 7, 4 }}, {{ 5, 3, 8, 0, 4, 1, 7, 2, 6 }}, {{ 5, 3, 8, 4, 7, 1, 6, 2, 0 }},
             {{ 5, 7, 0, 4, 8, 1, 3, 6, 2 }}, {{ 5, 7, 0, 6, 3, 1, 8, 4, 2 }}, {{ 5, 7, 1, 6, 0, 2, 4, 8, 3 }},
             {{ 5, 7, 2, 0, 8, 1, 4, 6, 3 }}, {{ 5, 7, 2, 0, 8, 4, 1, 3, 6 }}, {{ 5, 7, 2, 6, 8, 1, 4, 0, 3 }},
             {{ 5, 7, 4, 1, 8, 6, 3, 0, 2 }}, {{ 5, 8, 0, 3, 6, 2, 7, 1, 4 }}, {{ 5, 8, 2, 0, 7, 3, 1, 6, 4 }},
             {{ 5, 8, 4, 0, 7, 3, 1, 6, 2 }}, {{ 5, 8, 4, 1, 7, 2, 6, 3, 0 }}, {{ 5, 8, 4, 7, 0, 2, 6, 1, 3 }},
             {{ 5, 8, 6, 3, 0, 7, 1, 4, 2 }}, {{ 6, 0, 3, 1, 7, 5, 8, 2, 4 }}, {{ 6, 0, 3, 5, 8, 2, 4, 7, 1 }},
             {{ 6, 0, 3, 7, 4, 2, 8, 5, 1 }}, {{ 6, 0, 5, 1, 4, 7, 3, 8, 2 }}, {{ 6, 0, 5, 7, 1, 3, 8, 2, 4 }},
             {{ 6, 0, 5, 8, 1, 3, 7, 2, 4 }}, {{ 6, 0, 7, 4, 1, 8, 2, 5, 3 }}, {{ 6, 1, 3, 0, 7, 4, 8, 5, 2 }},
             {{ 6, 1, 3, 5, 0, 8, 4, 2, 7 }}, {{ 6, 1, 3, 8, 0, 7, 4, 2, 5 }}, {{ 6, 1, 5, 2, 0, 7, 4, 8, 3 }},
             {{ 6, 1, 7, 5, 0, 2, 4, 8, 3 }}, {{ 6, 2, 0, 5, 7, 4, 1, 3, 8 }}, {{ 6, 2, 0, 8, 4, 7, 1, 3, 5 }},
             {{ 6, 2, 5, 1, 4, 0, 8, 3, 7 }}, {{ 6, 2, 5, 7, 0, 3, 8, 4, 1 }}, {{ 6, 2, 5, 7, 0, 4, 8, 1, 3 }},
             {{ 6, 2, 7, 1, 3, 5, 8, 4, 0 }}, {{ 6, 2, 7, 1, 4, 0, 8, 3, 5 }}, {{ 6, 2, 7, 5, 1, 8, 4, 0, 3 }},
             {{ 6, 3, 0, 2, 5, 8, 1, 7, 4 }}, {{ 6, 3, 0, 2, 7, 5, 1, 8, 4 }}, {{ 6, 3, 0, 2, 8, 5, 7, 4, 1 }},
             {{ 6, 3, 0, 4, 1, 8, 5, 7, 2 }}, {{ 6, 3, 0, 7, 1, 8, 5, 2, 4 }}, {{ 6, 3, 0, 7, 4, 2, 5, 8, 1 }},
             {{ 6, 3, 0, 8, 1, 5, 7, 2, 4 }}, {{ 6, 3, 1, 4, 7, 0, 2, 5, 8 }}, {{ 6, 3, 1, 4, 8, 0, 2, 7, 5 }},
             {{ 6, 3, 1, 7, 5, 0, 2, 4, 8 }}, {{ 6, 3, 1, 8, 4, 0, 7, 5, 2 }}, {{ 6, 3, 1, 8, 5, 2, 4, 7, 0 }},
             {{ 6, 3, 7, 0, 4, 8, 1, 5, 2 }}, {{ 6, 3, 7, 2, 8, 5, 1, 4, 0 }}, {{ 6, 4, 0, 5, 8, 2, 7, 3, 1 }},
             {{ 6, 4, 0, 7, 5, 2, 8, 1, 3 }}, {{ 6, 4, 1, 7, 0, 2, 8, 5, 3 }}, {{ 6, 4, 1, 7, 0, 3, 8, 2, 5 }},
             {{ 6, 4, 2, 8, 5, 7, 1, 3, 0 }}, {{ 6, 4, 7, 1, 8, 2, 5, 3, 0 }}, {{ 6, 4, 7, 1, 8, 5, 2, 0, 3 }},
             {{ 6, 8, 0, 2, 4, 7, 1, 3, 5 }}, {{ 6, 8, 1, 5, 0, 2, 4, 7, 3 }}, {{ 6, 8, 2, 4, 1, 7, 5, 3, 0 }},
             {{ 6, 8, 2, 7, 1, 3, 5, 0, 4 }}, {{ 6, 8, 3, 1, 4, 7, 5, 0, 2 }}, {{ 6, 8, 5, 2, 0, 7, 4, 1, 3 }},
             {{ 7, 0, 3, 5, 2, 8, 6, 4, 1 }}, {{ 7, 0, 3, 6, 2, 5, 8, 1, 4 }}, {{ 7, 0, 3, 6, 4, 1, 8, 5, 2 }},
             {{ 7, 0, 4, 6, 1, 5, 2, 8, 3 }}, {{ 7, 1, 3, 0, 6, 8, 5, 2, 4 }}, {{ 7, 1, 4, 6, 0, 3, 5, 8, 2 }},
             {{ 7, 1, 8, 5, 2, 0, 3, 6, 4 }}, {{ 7, 2, 0, 3, 6, 8, 5, 1, 4 }}, {{ 7, 2, 4, 1, 8, 5, 3, 6, 0 }},
             {{ 7, 2, 4, 8, 0, 5, 3, 1, 6 }}, {{ 7, 3, 0, 6, 4, 1, 5, 8, 2 }}, {{ 7, 3, 6, 8, 1, 5, 0, 2, 4 }},
             {{ 7, 3, 8, 0, 4, 1, 5, 2, 6 }}, {{ 7, 3, 8, 2, 4, 6, 0, 5, 1 }}, {{ 7, 3, 8, 2, 5, 1, 6, 4, 0 }},
             {{ 7, 3, 8, 6, 2, 0, 5, 1, 4 }}, {{ 7, 4, 0, 5, 8, 1, 3, 6, 2 }}, {{ 7, 4, 1, 3, 0, 6, 8, 2, 5 }},
             {{ 7, 4, 1, 3, 0, 6, 8, 5, 2 }}, {{ 7, 4, 1, 8, 0, 3, 6, 2, 5 }}, {{ 7, 4, 1, 8, 6, 3, 0, 2, 5 }},
             {{ 7, 4, 2, 0, 5, 1, 8, 6, 3 }}, {{ 7, 4, 2, 0, 6, 3, 5, 8, 1 }}, {{ 7, 4, 2, 5, 8, 6, 0, 3, 1 }},
             {{ 7, 4, 2, 8, 6, 1, 3, 5, 0 }}, {{ 7, 5, 0, 2, 4, 6, 8, 3, 1 }}, {{ 7, 5, 0, 2, 6, 8, 3, 1, 4 }},
             {{ 7, 5, 1, 6, 0, 3, 8, 4, 2 }}, {{ 7, 5, 2, 8, 6, 0, 3, 1, 4 }}, {{ 7, 5, 8, 2, 0, 3, 6, 4, 1 }},
             {{ 8, 1, 4, 6, 0, 2, 7, 5, 3 }}, {{ 8, 1, 4, 6, 3, 0, 7, 5, 2 }}, {{ 8, 1, 5, 7, 2, 0, 3, 6, 4 }},
             {{ 8, 2, 4, 1, 7, 0, 6, 3, 5 }}, {{ 8, 2, 5, 1, 6, 0, 3, 7, 4 }}, {{ 8, 2, 5, 1, 6, 4, 0, 7, 3 }},
             {{ 8, 2, 5, 3, 0, 7, 4, 6, 1 }}, {{ 8, 3, 0, 4, 7, 1, 6, 2, 5 }}, {{ 8, 3, 1, 4, 7, 5, 0, 2, 6 }},
             {{ 8, 3, 1, 6, 2, 5, 7, 0, 4 }}, {{ 8, 3, 5, 7, 1, 6, 0, 2, 4 }}, {{ 8, 3, 5, 7, 2, 0, 6, 4, 1 }},
             {{ 8, 3, 7, 0, 2, 5, 1, 6, 4 }}, {{ 8, 4, 0, 3, 5, 7, 1, 6, 2 }}, {{ 8, 4, 0, 7, 3, 1, 6, 2, 5 }},
             {{ 8, 4, 2, 0, 5, 7, 1, 3, 6 }}, {{ 8, 4, 2, 0, 6, 1, 7, 5, 3 }}, {{ 8, 4, 2, 7, 3, 6, 0, 5, 1 }},
             {{ 8, 4, 7, 3, 0, 6, 1, 5, 2 }}, {{ 8, 5, 1, 6, 0, 2, 4, 7, 3 }}, {{ 8, 5, 2, 0, 7, 4, 1, 3, 6 }},
             {{ 8, 5, 2, 6, 1, 7, 4, 0, 3 }}, {{ 8, 5, 3, 1, 7, 4, 6, 0, 2 }}, {{ 8, 5, 3, 6, 0, 7, 1, 4, 2 }},
             {{ 8, 5, 7, 1, 3, 0, 6, 4, 2 }}, {{ 8, 6, 1, 3, 0, 7, 4, 2, 5 }}, {{ 8, 6, 2, 7, 1, 4, 0, 5, 3 }},
             {{ 8, 6, 3, 1, 7, 5, 0, 2, 4 }}}};

        switch (n)
        {
        case 1:
            return queen1;
        case 2:
            return queen2;
        case 3:
            return queen3;
        case 4:
            return queen4;
        case 5:
            return queen5;
        case 6:
            return queen6;
        case 7:
            return queen7;
        case 8:
            return solve(queen8, _queen8);
        case 9:
            return solve(queen9, _queen9);
        default:
            assert(0);
        }
        // @formatter:on
    }
};
